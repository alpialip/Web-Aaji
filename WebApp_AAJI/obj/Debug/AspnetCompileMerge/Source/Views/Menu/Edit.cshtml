@model WebApp_AAJI.Models.menu

@{
    ViewBag.Title = "Edit";
}

<script type="text/javascript">
    function OnChangeIsParentMenu() {
        if (document.getElementById('menuIsParent').checked) {
            $('select option:first-child').attr('selected', 'selected');
            document.getElementById('menuParent').disabled = true;
        }
        else
            document.getElementById('menuParent').disabled = false;
    }
</script>

<h2>Edit</h2>

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()
    
    <div class="form-horizontal">
        <h4>menu</h4>
        <hr />
        @Html.ValidationSummary(true)
        @Html.HiddenFor(model => model.menuID)

        <div class="form-group">
            @Html.LabelFor(model => model.menuName, new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.menuName)
                @Html.ValidationMessageFor(model => model.menuName)
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.menuLink, new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.menuLink)
                @Html.ValidationMessageFor(model => model.menuLink)
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.menuIsParent, new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @*@Html.EditorFor(model => model.menuIsParent)*@
                @Html.CheckBoxFor(model => model.menuIsParent, new { @onchange = "OnChangeIsParentMenu();" })
                @Html.ValidationMessageFor(model => model.menuIsParent)
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.menuParent, new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @*@Html.EditorFor(model => model.menuParent)*@
                @if((bool)TempData["isParentMenu"] == true)    
                {       
                    @Html.DropDownList("menuParent", (IEnumerable<SelectListItem>)ViewBag.table_name, "- Select -", new { @class = "form-control", @disabled = "disabled" })
                }
                else
                { 
                    @Html.DropDownList("menuParent", (IEnumerable<SelectListItem>)ViewBag.table_name, "- Select -", new { @class = "form-control" })
                }
                @Html.ValidationMessageFor(model => model.menuParent)
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.menuDescription, new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.menuDescription)
                @Html.ValidationMessageFor(model => model.menuDescription)
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.menuIsActive, new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.menuIsActive)
                @Html.ValidationMessageFor(model => model.menuIsActive)
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Save" class="btn btn-default" />
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>
