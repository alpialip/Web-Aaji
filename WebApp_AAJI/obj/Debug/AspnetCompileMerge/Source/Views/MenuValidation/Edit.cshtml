@model WebApp_AAJI.Models.menuValidation

@{
    ViewBag.Title = "Edit";
}

<h2>Edit</h2>

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()
    
    <div class="form-horizontal">
        <h4>menuValidation</h4>
        <hr />
        @Html.ValidationSummary(true)
        @Html.HiddenFor(model => model.menuValId)

        @Html.HiddenFor(model => model.menuID)

        @Html.HiddenFor(model => model.userID)

        <div class="form-group">
            @Html.LabelFor(model => model.menuID, new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @*@Html.EditorFor(model => model.menuID)*@
                @Html.DropDownList("menuID", ViewBag.menuID as SelectList, "- Select -", new { @class = "form-control", @readonly=true })
                @Html.ValidationMessageFor(model => model.menuID)
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.userID, new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @*@Html.EditorFor(model => model.userID)*@
                @Html.DropDownList("userID", ViewBag.userID as SelectList, "- Select -", new { @class = "form-control", @readonly = true })
                @Html.ValidationMessageFor(model => model.userID)
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.validationAccess, new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @*@Html.EditorFor(model => model.validationAccess)*@
                <div style="width: 110px; height: 110px; overflow:auto;">
                    @if (ViewData["actAssign"] != null)
                    {
                        var actAssign = ViewData["actAssign"] as IEnumerable<WebApp_AAJI.Models.menuValidation.SelectActionAuthorize>;
                        for (int i = 0; i < actAssign.ToList().Count; i++)
                        {
                            <div>
                                @Html.HiddenFor(x => actAssign.ToList()[i].Id)
                                @Html.CheckBoxFor(x => actAssign.ToList()[i].Selected, new { @value = actAssign.ToList()[i].Id })
                                @Html.LabelFor(x => actAssign.ToList()[i].Selected, actAssign.ToList()[i].Name)
                            </div>
                        }
                    }
                </div>
                @Html.ValidationMessageFor(model => model.validationAccess)
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.isActive, new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.isActive)
                @Html.ValidationMessageFor(model => model.isActive)
            </div>
        </div>

        @*<div class="form-group">
            @Html.LabelFor(model => model.createdDate, new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.createdDate)
                @Html.ValidationMessageFor(model => model.createdDate)
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.createdUser, new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.createdUser)
                @Html.ValidationMessageFor(model => model.createdUser)
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.modifiedDate, new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.modifiedDate)
                @Html.ValidationMessageFor(model => model.modifiedDate)
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.modifiedUser, new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.modifiedUser)
                @Html.ValidationMessageFor(model => model.modifiedUser)
            </div>
        </div>*@

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Save" class="btn btn-default" />
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>
